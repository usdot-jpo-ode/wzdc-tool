<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.Core.Experimental</name>
    </assembly>
    <members>
        <member name="T:Azure.Core.ContentType">
            <summary>
            Represents content type.
            </summary>
        </member>
        <member name="P:Azure.Core.ContentType.ApplicationJson">
            <summary>
            application/json
            </summary>
        </member>
        <member name="P:Azure.Core.ContentType.ApplicationOctetStream">
            <summary>
            application/json
            </summary>
        </member>
        <member name="P:Azure.Core.ContentType.TextPlain">
            <summary>
            application/json
            </summary>
        </member>
        <member name="M:Azure.Core.ContentType.#ctor(System.String)">
            <summary>
            Creates an instance of <see cref="T:Azure.Core.ContentType" />.
            </summary>
            <param name="contentType">The content type string.</param>
        </member>
        <member name="M:Azure.Core.ContentType.op_Implicit(System.String)~Azure.Core.ContentType">
            <summary>
            Creates an instance of <see cref="T:Azure.Core.ContentType" />.
            </summary>
            <param name="contentType">The content type string.</param>
        </member>
        <member name="M:Azure.Core.ContentType.Equals(Azure.Core.ContentType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Core.ContentType.Equals(System.String)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Core.ContentType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Core.ContentType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Core.ContentType.op_Equality(Azure.Core.ContentType,Azure.Core.ContentType)">
            <summary>
            Compares equality of two <see cref="T:Azure.Core.ContentType" /> instances.
            </summary>
            <param name="left">The method to compare.</param>
            <param name="right">The method to compare against.</param>
            <returns><c>true</c> if <see cref="T:Azure.Core.ContentType" /> values are equal for <paramref name="left" /> and <paramref name="right" />, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.ContentType.op_Inequality(Azure.Core.ContentType,Azure.Core.ContentType)">
            <summary>
            Compares inequality of two <see cref="T:Azure.Core.ContentType" /> instances.
            </summary>
            <param name="left">The method to compare.</param>
            <param name="right">The method to compare against.</param>
            <returns><c>true</c> if <see cref="T:Azure.Core.ContentType" /> values are equal for <paramref name="left" /> and <paramref name="right" />, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.ContentType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Core.DateTimeRange">
            <summary>
            Represents a span of time over which the query would be executed.
            </summary>
        </member>
        <member name="P:Azure.Core.DateTimeRange.All">
            <summary>
            Represents the maximum <see cref="T:Azure.Core.DateTimeRange" />.
            </summary>
        </member>
        <member name="P:Azure.Core.DateTimeRange.Duration">
            <summary>
            Gets the duration of the range.
            </summary>
        </member>
        <member name="P:Azure.Core.DateTimeRange.Start">
            <summary>
            Gets the start time of the range.
            </summary>
        </member>
        <member name="P:Azure.Core.DateTimeRange.End">
            <summary>
            Gets the end time of the range.
            </summary>
        </member>
        <member name="M:Azure.Core.DateTimeRange.#ctor(System.TimeSpan)">
            <summary>
            Initializes an instance of <see cref="T:Azure.Core.DateTimeRange" /> using a duration value.
            The exact query range would be determined by the service when executing the query.
            </summary>
            <param name="duration">The duration of the range.</param>
        </member>
        <member name="M:Azure.Core.DateTimeRange.#ctor(System.DateTimeOffset,System.TimeSpan)">
            <summary>
            Initializes an instance of <see cref="T:Azure.Core.DateTimeRange" /> using a start time and a duration value.
            </summary>
            <param name="start">The start of the range.</param>
            <param name="duration">The duration of the range.</param>
        </member>
        <member name="M:Azure.Core.DateTimeRange.#ctor(System.TimeSpan,System.DateTimeOffset)">
            <summary>
            Initializes an instance of <see cref="T:Azure.Core.DateTimeRange" /> using a duration and an end time.
            </summary>
            <param name="duration">The duration of the range.</param>
            <param name="end">The end of the range.</param>
        </member>
        <member name="M:Azure.Core.DateTimeRange.#ctor(System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Initializes an instance of <see cref="T:Azure.Core.DateTimeRange" /> using a start time and an end time.
            </summary>
            <param name="start">The start of the range.</param>
            <param name="end">The end of the range.</param>
        </member>
        <member name="M:Azure.Core.DateTimeRange.op_Implicit(System.TimeSpan)~Azure.Core.DateTimeRange">
            <summary>
            Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:Azure.Core.DateTimeRange" />.
            </summary>
            <param name="timeSpan">The <see cref="T:System.TimeSpan" /> value to convert.</param>
        </member>
        <member name="M:Azure.Core.DateTimeRange.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="M:Azure.Core.DateTimeRange.Equals(Azure.Core.DateTimeRange)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Core.DateTimeRange.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Core.DateTimeRange.op_Equality(Azure.Core.DateTimeRange,Azure.Core.DateTimeRange)">
            <summary>
            Determines if two <see cref="T:Azure.Core.DateTimeRange" /> values are the same.
            </summary>
            <param name="left">The first <see cref="T:Azure.Core.DateTimeRange" /> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Core.DateTimeRange" /> to compare.</param>
            <returns>True if <paramref name="left" /> and <paramref name="right" /> are the same; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Core.DateTimeRange.op_Inequality(Azure.Core.DateTimeRange,Azure.Core.DateTimeRange)">
            <summary>
            Determines if two <see cref="T:Azure.Core.DateTimeRange" /> values are different.
            </summary>
            <param name="left">The first <see cref="T:Azure.Core.DateTimeRange" /> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Core.DateTimeRange" /> to compare.</param>
            <returns>True if <paramref name="left" /> and <paramref name="right" /> are different; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Core.DateTimeRange.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Core.DateTimeRange.Parse(System.String)">
            <summary>
            Converts a <see cref="T:System.String" /> value to it's <see cref="T:Azure.Core.DateTimeRange" /> representation.
            </summary>
            <param name="value">The string to convert.</param>
            <returns>A <see langword="DateTimeRange" /> equivalent of the string.</returns>
            <exception cref="T:System.FormatException"><paramref name="value" /> is not in correct format to represent a <see langword="DateTimeRange" /> value.</exception>
        </member>
        <member name="T:Azure.Core.DynamicContent">
            <summary>
            Represents the <see cref="T:Azure.Core.JsonData" /> sent as part of the Azure.Core.Request.
            </summary>
        </member>
        <member name="M:Azure.Core.DynamicContent.Create(Azure.Core.JsonData)">
            <summary>
            Creates a RequestContent for a given JSON object.
            </summary>
            <param name="body">The JSON object the request content represents</param>
            <returns>A RequestContent which is the UTF-8 encoding of the underlying DynamicJson</returns>
        </member>
        <member name="M:Azure.Core.DynamicContent.WriteToAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Writes contents of this object to an instance of <see cref="T:System.IO.Stream" />.
            </summary><param name="stream">The stream to write to.</param><param name="cancellation">To cancellation token to use.</param>
        </member>
        <member name="M:Azure.Core.DynamicContent.WriteTo(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Writes contents of this object to an instance of <see cref="T:System.IO.Stream" />.
            </summary><param name="stream">The stream to write to.</param><param name="cancellation">To cancellation token to use.</param>
        </member>
        <member name="M:Azure.Core.DynamicContent.TryComputeLength(System.Int64@)">
            <summary>
            Attempts to compute the length of the underlying content, if available.
            </summary><param name="length">The length of the underlying data.</param>
        </member>
        <member name="M:Azure.Core.DynamicContent.Dispose">
            <summary>
            Frees resources held by the <see cref="T:Azure.Core.RequestContent" /> object.
            </summary>
        </member>
        <member name="T:Azure.Core.DynamicRequest">
            <summary>
            Represents an HTTP request with <see cref="T:Azure.Core.JsonData" /> content.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicRequest.Content">
            <summary>
            Gets or sets the request content.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicRequest.Body">
            <summary>
            The JSON body of request.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicRequest.DynamicBody">
            <summary>
            The JSON body of the request.
            </summary>
        </member>
        <member name="M:Azure.Core.DynamicRequest.#ctor(Azure.Core.Request,Azure.Core.Pipeline.HttpPipeline)">
            <summary>
            Creates an instance of <see cref="T:Azure.Core.RequestContent" /> that wraps <see cref="T:Azure.Core.JsonData" /> content.
            </summary>
            <param name="request">The <see cref="P:Azure.Core.DynamicRequest.Request" /> to send.</param>
            <param name="pipeline">The HTTP pipeline for sending and receiving REST requests and responses.</param>
        </member>
        <member name="M:Azure.Core.DynamicRequest.SendAsync(System.Threading.CancellationToken)">
            <summary>
            Send the request asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The response dynamically typed in a <see cref="T:Azure.Core.DynamicResponse" />.</returns>
        </member>
        <member name="M:Azure.Core.DynamicRequest.Send(System.Threading.CancellationToken)">
            <summary>
            Send the request synchronously.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The response dynamically typed in a <see cref="T:Azure.Core.DynamicResponse" />.</returns>
        </member>
        <member name="P:Azure.Core.DynamicRequest.ClientRequestId">
            <summary>
            Gets or sets the client request id that was sent to the server as <c>x-ms-client-request-id</c> headers.
            </summary>
        </member>
        <member name="M:Azure.Core.DynamicRequest.Dispose">
            <summary>
            Frees resources held by the <see cref="T:Azure.Core.DynamicRequest" /> object.
            </summary>
        </member>
        <member name="M:Azure.Core.DynamicRequest.Dispose(System.Boolean)">
            <summary>
            Frees resources held by the <see cref="T:Azure.Core.DynamicRequest" /> object.
            </summary>
            <param name="disposing">true if we should dispose, otherwise false</param>
        </member>
        <member name="M:Azure.Core.DynamicRequest.AddHeader(System.String,System.String)">
            <summary>
            Adds a header value to the header collection.
            </summary><param name="name">The header name.</param><param name="value">The header value.</param>
        </member>
        <member name="M:Azure.Core.DynamicRequest.ContainsHeader(System.String)">
            <summary>
            Returns <c>true</c> if the header is stored in the collection.
            </summary><param name="name">The header name.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.DynamicRequest.EnumerateHeaders">
            <summary>
            Returns an iterator enumerating <see cref="T:Azure.Core.HttpHeader" /> in the request.
            </summary><returns>The <see cref="T:System.Collections.Generic.IEnumerable`1" /> enumerating <see cref="T:Azure.Core.HttpHeader" /> in the response.</returns>
        </member>
        <member name="M:Azure.Core.DynamicRequest.RemoveHeader(System.String)">
            <summary>
            Removes the header from the collection.
            </summary><param name="name">The header name.</param>
        </member>
        <member name="M:Azure.Core.DynamicRequest.TryGetHeader(System.String,System.String@)">
            <summary>
            Returns header value if the header is stored in the collection. If the header has multiple values they are going to be joined with a comma.
            </summary><param name="name">The header name.</param><param name="value">The reference to populate with value.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.DynamicRequest.TryGetHeaderValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            Returns header values if the header is stored in the collection.
            </summary><param name="name">The header name.</param><param name="values">The reference to populate with values.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Azure.Core.DynamicResponse">
            <summary>
            Represents a result of Azure operation with a <see cref="T:Azure.Core.JsonData" /> response.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicResponse.Body">
            <summary>
            The JSON body of the response.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicResponse.DynamicBody">
            <summary>
            The JSON body of the response.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicResponse.Status">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicResponse.ReasonPhrase">
            <summary>
            Gets the HTTP reason phrase.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicResponse.ContentStream">
            <summary>
            Gets the contents of HTTP response. Returns <c>null</c> for responses without content.
            </summary>
        </member>
        <member name="P:Azure.Core.DynamicResponse.ClientRequestId">
            <summary>
            Gets the client request id that was sent to the server as <c>x-ms-client-request-id</c> headers.
            </summary>
        </member>
        <member name="M:Azure.Core.DynamicResponse.TryGetHeader(System.String,System.String@)">
            <summary>
            Returns header value if the header is stored in the collection. If header has multiple values they are going to be joined with a comma.
            </summary><param name="name">The header name.</param><param name="value">The reference to populate with value.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.DynamicResponse.TryGetHeaderValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
            <summary>
            Returns header values if the header is stored in the collection.
            </summary><param name="name">The header name.</param><param name="values">The reference to populate with values.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.DynamicResponse.ContainsHeader(System.String)">
            <summary>
            Returns <c>true</c> if the header is stored in the collection.
            </summary><param name="name">The header name.</param><returns><c>true</c> if the specified header is stored in the collection, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Core.DynamicResponse.EnumerateHeaders">
            <summary>
            Returns an iterator for enumerating <see cref="T:Azure.Core.HttpHeader" /> in the response.
            </summary><returns>The <see cref="T:System.Collections.Generic.IEnumerable`1" /> enumerating <see cref="T:Azure.Core.HttpHeader" /> in the response.</returns>
        </member>
        <member name="M:Azure.Core.DynamicResponse.#ctor(Azure.Response,Azure.Core.JsonData)">
            <summary>
            Represents a result of Azure operation with a <see cref="T:Azure.Core.JsonData" /> response.
            </summary>
            <param name="response">The response returned by the service.</param>
            <param name="body">The body returned by the service.</param>
        </member>
        <member name="M:Azure.Core.DynamicResponse.Dispose">
            <summary>
            Frees resources held by the <see cref="T:Azure.Core.DynamicResponse" /> object.
            </summary>
        </member>
        <member name="M:Azure.Core.DynamicResponse.Dispose(System.Boolean)">
            <summary>
            Frees resources held by the <see cref="T:Azure.Core.DynamicResponse" /> object.
            </summary>
            <param name="disposing">true if we should dispose, otherwise false</param>
        </member>
        <member name="T:Azure.Core.JsonData">
            <summary>
            A mutable representation of a JSON value.
            </summary>
        </member>
        <member name="M:Azure.Core.JsonData.#ctor">
            <summary>
             Creates a new JsonData object which represents an JSON object with no properties.
            </summary>
        </member>
        <member name="M:Azure.Core.JsonData.#ctor(System.Text.Json.JsonDocument)">
            <summary>
             Creates a new JsonData object which represents the value of the given JsonDocument.
            </summary>
            <param name="jsonDocument">The JsonDocument to convert.</param>
            <remarks>A JsonDocument can be constructed from a JSON string using <see cref="M:System.Text.Json.JsonDocument.Parse(System.String,System.Text.Json.JsonDocumentOptions)" />.</remarks>
        </member>
        <member name="M:Azure.Core.JsonData.#ctor(System.Object)">
            <summary>
            Creates a new JsonData object which represents the given object.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.#ctor(System.Object,System.Text.Json.JsonSerializerOptions,System.Type)">
            <summary>
            Creates a new JsonData object which represents the given object.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <param name="type">The type of the value to convert. </param>
        </member>
        <member name="M:Azure.Core.JsonData.Get``1(System.String)">
            <summary>
            Returns the value for a given property.
            </summary>
            <typeparam name="T">The type of the object to return.</typeparam>
            <param name="propertyName">The name of the property to get.</param>
            <returns>The value for a given property</returns>
            <remarks>If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.</remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Get``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Gets the value of a property from an object.
            </summary>
            <typeparam name="T">The type of the object to return.</typeparam>
            <param name="propertyName">The name of the property to get.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <returns>The value for a given property.</returns>
            <remarks>If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.</remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Get(System.String)">
            <summary>
            Gets the value of a property from an object, or <code>null</code> if no such property exists.
            </summary>
            <param name="propertyName">The name of the property to get</param>
            <returns>The value for a given property, or <code>null</code> if no such property exists.</returns>
            <remarks>If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.</remarks>
        </member>
        <member name="M:Azure.Core.JsonData.To``1">
            <summary>
            Converts the given JSON value into an instance of a given type.
            </summary>
            <typeparam name="T">The type to convert the value into.</typeparam>
            <returns>A new instance of <typeparamref name="T" /> constructed from the underlying JSON value.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.To``1(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Deserializes the given JSON value into an instance of a given type.
            </summary>
            <typeparam name="T">The type to deserialize the value into</typeparam>
            <param name="options">Options to control the conversion behavior.</param>
            <returns>A new instance of <typeparamref name="T" /> constructed from the underlying JSON value.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.ToJsonString">
            <summary>
            Returns a stringified version of the JSON for this value.
            </summary>
            <returns>Returns a stringified version of the JSON for this value.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.Set(System.String,System.Boolean)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="value">The value to set the property to.</param>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set(System.String,System.Double)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="value">The value to set the property to.</param>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set(System.String,System.Single)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="value">The value to set the property to.</param>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set(System.String,System.Int32)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="value">The value to set the property to.</param>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set(System.String,System.Int64)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="value">The value to set the property to.</param>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set(System.String,System.String)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="value">The value to set the property to.</param>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set(System.String,System.Object)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="serializable">The value to set the property to.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> of the serialized object.</returns>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set(System.String,System.Object,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="serializable">The value to set the property to.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> of the serialized object.</returns>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set``1(System.String,``0[])">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="serializable">The value to set the property to.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> of the serialized object.</returns>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Set``1(System.String,``0[],System.Text.Json.JsonSerializerOptions)">
            <summary>
            Sets the property of an object to a given value.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="serializable">The value to set the property to.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> of the serialized object.</returns>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.SetEmptyObject(System.String)">
            <summary>
            Sets the property of an object to a new empty object.
            </summary>
            <param name="propertyName">The property to set.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> for the newly created empty object.</returns>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.SetEmptyArray(System.String)">
            <summary>
            Sets the property of an object to a new empty array.
            </summary>
            <param name="propertyName">The property to set.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> for the newly created empty array.</returns>
            <remarks>
            If the property already exists, the value is overwritten.
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add(System.Boolean)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="value">The value to insert into the array.</param>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add(System.Double)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="value">The value to insert into the array.</param>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add(System.Single)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="value">The value to insert into the array.</param>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add(System.Int32)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="value">The value to insert into the array.</param>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add(System.Int64)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="value">The value to insert into the array.</param>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add(System.String)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="value">The value to insert into the array.</param>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add(System.Object)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="serializable">The value to insert into the array.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> of the serialized object.</returns>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add(System.Object,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="serializable">The value to insert into the array.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> of the serialized object.</returns>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add``1(``0[])">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="serializable">The value to insert into the array.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> of the serialized object.</returns>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.Add``1(``0[],System.Text.Json.JsonSerializerOptions)">
            <summary>
            Inserts a new value at the end of an array.
            </summary>
            <param name="serializable">The value to insert into the array.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> of the serialized object.</returns>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.AddEmptyObject">
            <summary>
            Inserts a new empty object at the end of an array.
            </summary>
            <returns>A <see cref="T:Azure.Core.JsonData" /> for the newly created empty object.</returns>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.AddEmptyArray">
            <summary>
            Inserts a new empty array at the end of an array.
            </summary>
            <returns>A <see cref="T:Azure.Core.JsonData" /> for the newly created empty array.</returns>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="P:Azure.Core.JsonData.Item(System.Int32)">
            <summary>
            Gets or sets a value at the given index in an array.
            </summary>
            <param name="arrayIndex">The index in the array of the value to get or set.</param>
            <returns>The value at the given index.</returns>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="P:Azure.Core.JsonData.Item(System.String)">
            <summary>
            Gets or sets a value for a given property in an object.
            </summary>
            <param name="propertyName">The name of the property in the object to get or set.</param>
            <returns>The value for the given property name.</returns>
            <remarks>
            If the <see cref="P:Azure.Core.JsonData.Kind" /> property is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this method throws <see cref="T:System.InvalidOperationException" />.
            </remarks>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Boolean">
            <summary>
            Converts the value to a <see cref="T:System.Boolean" />
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Int32">
            <summary>
            Converts the value to a <see cref="T:System.Int32" />
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Int64">
            <summary>
            Converts the value to a <see cref="T:System.Int64" />
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.String">
            <summary>
            Converts the value to a <see cref="T:System.String" />
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Single">
            <summary>
            Converts the value to a <see cref="T:System.Single" />
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Double">
            <summary>
            Converts the value to a <see cref="T:System.Double" />
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Nullable{System.Boolean}">
            <summary>
            Converts the value to a <see cref="T:System.Boolean" />
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Nullable{System.Int32}">
            <summary>
            Converts the value to a <see cref="T:System.Int32" /> or null.
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Nullable{System.Int64}">
            <summary>
            Converts the value to a <see cref="T:System.Int64" /> or null.
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Nullable{System.Single}">
            <summary>
            Converts the value to a <see cref="T:System.Single" /> or null.
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Explicit(Azure.Core.JsonData)~System.Nullable{System.Double}">
            <summary>
            Converts the value to a <see cref="T:System.Double" /> or null.
            </summary>
            <param name="json">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Int32)~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Int32" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Int64)~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Int64" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Double)~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Double" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Single)~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Single" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Boolean)~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Boolean" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.String)~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.String" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Nullable{System.Int32})~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Int32" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Nullable{System.Int64})~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Int64" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Nullable{System.Double})~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Double" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Nullable{System.Single})~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Single" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Implicit(System.Nullable{System.Boolean})~Azure.Core.JsonData">
            <summary>
            Converts an <see cref="T:System.Boolean" /> to a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Azure.Core.JsonData.op_Equality(Azure.Core.JsonData,System.String)">
            <summary>
            Returns true if a <see cref="T:Azure.Core.JsonData" /> has the same value as a given string,
            and false otherwise.
            </summary>
            <param name="left">The <see cref="T:Azure.Core.JsonData" /> to compare.</param>
            <param name="right">The <see cref="T:System.String" /> to compare.</param>
            <returns>True if the given JsonData represents the given string, and false otherwise.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.op_Inequality(Azure.Core.JsonData,System.String)">
            <summary>
            Returns false if a <see cref="T:Azure.Core.JsonData" /> has the same value as a given string,
            and true otherwise.
            </summary>
            <param name="left">The <see cref="T:Azure.Core.JsonData" /> to compare.</param>
            <param name="right">The <see cref="T:System.String" /> to compare.</param>
            <returns>False if the given JsonData represents the given string, and false otherwise</returns>
        </member>
        <member name="M:Azure.Core.JsonData.op_Equality(System.String,Azure.Core.JsonData)">
            <summary>
            Returns true if a <see cref="T:Azure.Core.JsonData" /> has the same value as a given string,
            and false otherwise.
            </summary>
            <param name="left">The <see cref="T:System.String" /> to compare.</param>
            <param name="right">The <see cref="T:Azure.Core.JsonData" /> to compare.</param>
            <returns>True if the given JsonData represents the given string, and false otherwise.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.op_Inequality(System.String,Azure.Core.JsonData)">
            <summary>
            Returns false if a <see cref="T:Azure.Core.JsonData" /> has the same value as a given string,
            and true otherwise.
            </summary>
            <param name="left">The <see cref="T:System.String" /> to compare.</param>
            <param name="right">The <see cref="T:Azure.Core.JsonData" /> to compare.</param>
            <returns>False if the given JsonData represents the given string, and false otherwise</returns>
        </member>
        <member name="M:Azure.Core.JsonData.FromString(System.String)">
            <summary>
            Parses text representing a single JSON value into a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="json">A string representing a JSON value.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> representation of the value.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.FromBytes(System.Byte[])">
            <summary>
            Parses text representing a single JSON value into a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="utf8Json">A UTF8 encoded string representing a JSON value.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> representation of the value.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.FromBytes(System.ReadOnlyMemory{System.Byte})">
            <summary>
            Parses text representing a single JSON value into a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="utf8Json">A UTF8 encoded string representing a JSON value.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> representation of the value.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.FromStream(System.IO.Stream)">
            <summary>
            Parses text representing a single JSON value into a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="utf8Json">A UTF8 encoded string representing a JSON value.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> representation of the value</returns>
        </member>
        <member name="M:Azure.Core.JsonData.FromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Parses text representing a single JSON value into a <see cref="T:Azure.Core.JsonData" />.
            </summary>
            <param name="utf8JsonStream">A UTF8 encoded string representing a JSON value.</param>
            <param name="cancellationToken">A token to monitor for cancelation requests.</param>
            <returns>A Task which will construct the <see cref="T:Azure.Core.JsonData" /> representation of the value</returns>
        </member>
        <member name="M:Azure.Core.JsonData.FromObject``1(``0,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Constructs a <see cref="T:Azure.Core.JsonData" /> from an object. The value corresponds to the serialized representation of the object.
            </summary>
            <param name="value">The object to construct the <see cref="T:Azure.Core.JsonData" /> from.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <returns>A <see cref="T:Azure.Core.JsonData" /> representation of the value.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.EmptyObject">
            <summary>
            Returns a new <see cref="T:Azure.Core.JsonData" /> that represents an empty object.
            </summary>
            <returns>A <see cref="T:Azure.Core.JsonData" /> that represents an empty object.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.EmptyArray">
            <summary>
            Returns a new <see cref="T:Azure.Core.JsonData" /> that represents an empty array.
            </summary>
            <returns>A <see cref="T:Azure.Core.JsonData" /> that represents an empty array.</returns>
        </member>
        <member name="P:Azure.Core.JsonData.Kind">
            <summary>
            The <see cref="T:System.Text.Json.JsonValueKind" /> of the value of this instance.
            </summary>
        </member>
        <member name="P:Azure.Core.JsonData.Length">
            <summary>
            Returns the number of elements in this array.
            </summary>
            <remarks>If <see cref="P:Azure.Core.JsonData.Kind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" /> this methods throws <see cref="T:System.InvalidOperationException" />.</remarks>
        </member>
        <member name="P:Azure.Core.JsonData.Properties">
            <summary>
            Returns the names of all the properties of this object.
            </summary>
            <remarks>If <see cref="P:Azure.Core.JsonData.Kind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" /> this methods throws <see cref="T:System.InvalidOperationException" />.</remarks>
        </member>
        <member name="P:Azure.Core.JsonData.Items">
            <summary>
            Returns all the elements in this array.
            </summary>
            <remarks>If<see cref="P:Azure.Core.JsonData.Kind" /> is not<see cref="F:System.Text.Json.JsonValueKind.Array" /> this methods throws <see cref="T:System.InvalidOperationException" />.</remarks>
        </member>
        <member name="M:Azure.Core.JsonData.WriteTo(System.IO.Stream)">
            <summary>
            Writes the UTF-8 encoded string representation of this instance.
            </summary>
            <param name="stream">The stream to write to.</param>
            <returns>The number of bytes written into the stream.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.WriteToAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Writes the UTF-8 encoded string representation of this instance.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="cancellationToken">A token to monitor for cancelation requests.</param>
            <returns>The number of bytes written into the stream.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.ToString">
            <summary>Returns a string that represents the current object.</summary><returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary><param name="obj">The object to compare with the current object.</param><returns><see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.Equals(Azure.Core.JsonData)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.GetHashCode">
            <summary>Serves as the default hash function.</summary><returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Azure.Core.JsonData.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Returns the <see cref="T:System.Dynamic.DynamicMetaObject" /> responsible for binding operations performed on this object.</summary><param name="parameter">The expression tree representation of the runtime value.</param><returns>The <see cref="T:System.Dynamic.DynamicMetaObject" /> to bind this object.</returns>
        </member>
        <member name="T:Azure.Core.ProtocolClientOptions">
            <summary>
            A concrete ClientOptions for use by client with no additional options other than the common ones.
            </summary>
        </member>
        <member name="T:Azure.Core.ResponseError">
            <summary>
            Represents an error returned by an Azure Service.
            </summary>
        </member>
        <member name="M:Azure.Core.ResponseError.#ctor(System.String,System.String,Azure.Core.ResponseInnerError,System.String,System.Collections.Generic.IReadOnlyList{Azure.Core.ResponseError})">
            <summary>
            Initializes a new instance of <see cref="T:Azure.Core.ResponseError" />.
            </summary>
            <param name="code">The error code.</param>
            <param name="message">The error message.</param>
            <param name="innerError">The inner error.</param>
            <param name="target">The error target.</param>
            <param name="details">The error details.</param>
        </member>
        <member name="P:Azure.Core.ResponseError.Code">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="P:Azure.Core.ResponseError.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Azure.Core.ResponseError.InnerError">
            <summary>
            Gets the inner error.
            </summary>
        </member>
        <member name="P:Azure.Core.ResponseError.Target">
            <summary>
            Gets the error target.
            </summary>
        </member>
        <member name="P:Azure.Core.ResponseError.Details">
            <summary>
            Gets the list of related errors.
            </summary>
        </member>
        <member name="M:Azure.Core.ResponseError.ToString">
            <summary>Returns a string that represents the current object.</summary><returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Azure.Core.ResponseInnerError">
            <summary>
            Represents an inner error.
            </summary>
        </member>
        <member name="P:Azure.Core.ResponseInnerError.Code">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="P:Azure.Core.ResponseInnerError.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Azure.Core.ResponseInnerError.InnerError">
            <summary>
            Gets the inner error.
            </summary>
        </member>
        <member name="M:Azure.Core.ResponseInnerError.ToString">
            <summary>Returns a string that represents the current object.</summary><returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="T:Azure.Core.HashCodeBuilder">
            <summary>
            Copied from https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/HashCode.cs.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.RequestOptions">
            <summary>
            Options which can be used to control the behavior of a request sent by a client.
            </summary>
        </member>
        <member name="M:Azure.RequestOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.RequestOptions" /> class.
            </summary>
        </member>
        <member name="M:Azure.RequestOptions.#ctor(Azure.ResponseStatusOption)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.RequestOptions" /> class using the given <see cref="T:Azure.RequestOptions" />.
            </summary>
            <param name="statusOption"></param>
        </member>
        <member name="M:Azure.RequestOptions.#ctor(System.Action{Azure.Core.HttpMessage})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.RequestOptions" /> class.
            </summary>
            <param name="perCall"></param>
        </member>
        <member name="M:Azure.RequestOptions.op_Implicit(Azure.ResponseStatusOption)~Azure.RequestOptions">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.RequestOptions" /> class using the given <see cref="T:Azure.ResponseStatusOption" />.
            </summary>
            <param name="option"></param>
        </member>
        <member name="P:Azure.RequestOptions.CancellationToken">
            <summary>
            The token to check for cancellation.
            </summary>
        </member>
        <member name="P:Azure.RequestOptions.StatusOption">
            <summary>
            Controls under what conditions the operation raises an exception if the underlying response indicates a failure.
            </summary>
        </member>
        <member name="P:Azure.RequestOptions.PerCallPolicy">
            <summary>
            A <see cref="T:Azure.Core.Pipeline.HttpPipelinePolicy" /> to use as part of this operation. This policy will be applied at the start
            of the underlying <see cref="T:Azure.Core.Pipeline.HttpPipeline" />.
            </summary>
        </member>
        <member name="T:Azure.RequestOptions.ActionPolicy">
            <summary>
            An <see cref="T:Azure.Core.Pipeline.HttpPipelineSynchronousPolicy" /> which invokes an action when a request is being sent.
            </summary>
        </member>
        <member name="T:Azure.ResponseStatusOption">
            <summary>
            ResponseStatusOption controls the behavior of an operation based on the status code of a response.
            </summary>
        </member>
        <member name="F:Azure.ResponseStatusOption.Default">
            <summary>
            Indicates that an operation should throw an exception when the response indicates a failure.
            </summary>
        </member>
        <member name="F:Azure.ResponseStatusOption.NoThrow">
            <summary>
            Indicates that an operation should not throw an exception when the response indicates a failure.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>Specifies that null is disallowed as an input even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue" />, the parameter may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter may be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue" />, the parameter will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>Specifies that the output will be non-null if the named parameter is non-null.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with the associated parameter name.</summary>
            <param name="parameterName">
            The associated parameter name.  The output will be non-null if the argument to the parameter specified is non-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>Gets the associated parameter name.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>Applied to a method that will never return under any circumstance.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>Specifies that the method will not return if the associated Boolean parameter is passed the specified value.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified parameter value.</summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
